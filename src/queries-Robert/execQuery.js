const execSelect = require("./queryRunners/select").executeSelect;
const execUpdate = require("./queryRunners/update").executeUpdate;
const execDelete = require("./queryRunners/delete").executeDelete;
const execInsert = require("./queryRunners/insert").executeInsert;
const queryParser = require('./parser/queryParser');

/**
 * Executes the given query against the current active
 * database for the given user.
 * @param query: {string} - query to be executed
 * @param dataBase: {Object} - database object generated by the database() method
 *                             implemented in the Firebase admin sdk
 * @param commitResults: {boolean} - indicates if results should be committed to the
 *                                   database when performing update, delete,
 *                                   and insert.
 *
 * @return a JSON object representing the result of the query
 */
let executeQuery = (query, dataBase, commitResults) => {
    let clean_query = queryParser.formatAndCleanQuery(query);
    const statementType = queryParser.determineStatementType(clean_query);

    switch (statementType) {
        case "select":
            return execSelect(query, dataBase);
        case "update":
            return execUpdate(query, dataBase, commitResults);
        case "delete":
            return execDelete(query, dataBase, commitResults);
        case "insert":
            return execInsert(query, dataBase, commitResults);
        case "invalid":
            throw new Error("Invalid SQL query. Query must be of type SELECT, UPDATE, DELETE, or INSERT");
        default:
            throw new Error("executeQuery(): executing default statement, something is very wrong");
    }
}

module.exports = {
   executeQuery: executeQuery
}